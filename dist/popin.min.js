!function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=3)}([function(e,t,n){var o=n(1),i=n(2),r=null;function a(e){return setTimeout(e,0)}e.exports=function(e,t){var n=document,s="string"==typeof e?n.querySelector(e):e,c=i({returnFocusOnDeactivate:!0,escapeDeactivates:!0},t),l={firstTabbableNode:null,lastTabbableNode:null,nodeFocusedBeforeActivation:null,mostRecentlyFocusedNode:null,active:!1,paused:!1},u={activate:function(e){if(!l.active){g(),l.active=!0,l.paused=!1,l.nodeFocusedBeforeActivation=n.activeElement;var t=e&&e.onActivate?e.onActivate:c.onActivate;return t&&t(),d(),u}},deactivate:p,pause:function(){!l.paused&&l.active&&(l.paused=!0,f())},unpause:function(){l.paused&&l.active&&(l.paused=!1,d())}};return u;function p(e){if(l.active){f(),l.active=!1,l.paused=!1;var t=e&&void 0!==e.onDeactivate?e.onDeactivate:c.onDeactivate;return t&&t(),(e&&void 0!==e.returnFocus?e.returnFocus:c.returnFocusOnDeactivate)&&a(function(){L(l.nodeFocusedBeforeActivation)}),u}}function d(){if(l.active)return r&&r.pause(),r=u,g(),a(function(){L(v())}),n.addEventListener("focusin",m,!0),n.addEventListener("mousedown",b,!0),n.addEventListener("touchstart",b,!0),n.addEventListener("click",E,!0),n.addEventListener("keydown",y,!0),u}function f(){if(l.active&&r===u)return n.removeEventListener("focusin",m,!0),n.removeEventListener("mousedown",b,!0),n.removeEventListener("touchstart",b,!0),n.removeEventListener("click",E,!0),n.removeEventListener("keydown",y,!0),r=null,u}function h(e){var t=c[e],o=t;if(!t)return null;if("string"==typeof t&&!(o=n.querySelector(t)))throw new Error("`"+e+"` refers to no known node");if("function"==typeof t&&!(o=t()))throw new Error("`"+e+"` did not return a node");return o}function v(){var e;if(!(e=null!==h("initialFocus")?h("initialFocus"):s.contains(n.activeElement)?n.activeElement:l.firstTabbableNode||h("fallbackFocus")))throw new Error("You can't have a focus-trap without at least one focusable element");return e}function b(e){s.contains(e.target)||(c.clickOutsideDeactivates?p({returnFocus:!o.isFocusable(e.target)}):e.preventDefault())}function m(e){s.contains(e.target)||e.target instanceof Document||(e.stopImmediatePropagation(),L(l.mostRecentlyFocusedNode||v()))}function y(e){if(!1!==c.escapeDeactivates&&function(e){return"Escape"===e.key||"Esc"===e.key||27===e.keyCode}(e))return e.preventDefault(),void p();(function(e){return"Tab"===e.key||9===e.keyCode})(e)&&function(e){if(g(),e.shiftKey&&e.target===l.firstTabbableNode)return e.preventDefault(),void L(l.lastTabbableNode);e.shiftKey||e.target!==l.lastTabbableNode||(e.preventDefault(),L(l.firstTabbableNode))}(e)}function E(e){c.clickOutsideDeactivates||s.contains(e.target)||(e.preventDefault(),e.stopImmediatePropagation())}function g(){var e=o(s);l.firstTabbableNode=e[0]||v(),l.lastTabbableNode=e[e.length-1]||v()}function L(e){e!==n.activeElement&&(e&&e.focus?(e.focus(),l.mostRecentlyFocusedNode=e,function(e){return e.tagName&&"input"===e.tagName.toLowerCase()&&"function"==typeof e.select}(e)&&e.select()):L(v()))}}},function(e,t){var n=["input","select","textarea","a[href]","button","[tabindex]","audio[controls]","video[controls]",'[contenteditable]:not([contenteditable="false"])'],o=n.join(","),i="undefined"==typeof Element?function(){}:Element.prototype.matches||Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector;function r(e,t){t=t||{};var n,r,s,c=[],p=[],f=new d(e.ownerDocument||e),h=e.querySelectorAll(o);for(t.includeContainer&&i.call(e,o)&&(h=Array.prototype.slice.apply(h)).unshift(e),n=0;n<h.length;n++)a(r=h[n],f)&&(0===(s=l(r))?c.push(r):p.push({documentOrder:n,tabIndex:s,node:r}));return p.sort(u).map(function(e){return e.node}).concat(c)}function a(e,t){return!(!s(e,t)||function(e){return function(e){return p(e)&&"radio"===e.type}(e)&&!function(e){if(!e.name)return!0;var t=function(e){for(var t=0;t<e.length;t++)if(e[t].checked)return e[t]}(e.ownerDocument.querySelectorAll('input[type="radio"][name="'+e.name+'"]'));return!t||t===e}(e)}(e)||l(e)<0)}function s(e,t){return t=t||new d(e.ownerDocument||e),!(e.disabled||function(e){return p(e)&&"hidden"===e.type}(e)||t.isUntouchable(e))}r.isTabbable=function(e,t){if(!e)throw new Error("No node provided");return!1!==i.call(e,o)&&a(e,t)},r.isFocusable=function(e,t){if(!e)throw new Error("No node provided");return!1!==i.call(e,c)&&s(e,t)};var c=n.concat("iframe").join(",");function l(e){var t=parseInt(e.getAttribute("tabindex"),10);return isNaN(t)?function(e){return"true"===e.contentEditable}(e)?0:e.tabIndex:t}function u(e,t){return e.tabIndex===t.tabIndex?e.documentOrder-t.documentOrder:e.tabIndex-t.tabIndex}function p(e){return"INPUT"===e.tagName}function d(e){this.doc=e,this.cache=[]}d.prototype.hasDisplayNone=function(e,t){if(e.nodeType!==Node.ELEMENT_NODE)return!1;var n=function(e,t){for(var n=0,o=e.length;n<o;n++)if(t(e[n]))return e[n]}(this.cache,function(t){return t===e});if(n)return n[1];var o=!1;return"none"===(t=t||this.doc.defaultView.getComputedStyle(e)).display?o=!0:e.parentNode&&(o=this.hasDisplayNone(e.parentNode)),this.cache.push([e,o]),o},d.prototype.isUntouchable=function(e){if(e===this.doc.documentElement)return!1;var t=this.doc.defaultView.getComputedStyle(e);return!!this.hasDisplayNone(e,t)||"hidden"===t.visibility},e.exports=r},function(e,t){e.exports=function(){for(var e={},t=0;t<arguments.length;t++){var o=arguments[t];for(var i in o)n.call(o,i)&&(e[i]=o[i])}return e};var n=Object.prototype.hasOwnProperty},function(e,t,n){"use strict";n.r(t);var o=n(0),i=n.n(o);const r={PopinId:"data-popin",PopinBtnOpen:"data-popin-open",PopinBtnClose:"data-popin-close",PopinLoadUrl:"data-popin-load"},a={popin:".js-popin",btnOpen:".js-popin-open",btnClose:".js-popin-close",popinMain:".js-popin-main",popinContent:".js-popin-content"},s={PopinOpen:"is-enabled",PopinLoading:"is-loading"};class c{constructor(e,t={}){this.options={trapFocus:!0,clickOutside:!0,load:void 0,loadType:"text",loadSelector:void 0,loadError:"Une erreur est survenue lors du chargement du contenu.",thenOpen:void 0,...t,selectors:{...a,...t.selectors}},this._element=e||document.querySelector(this.options.selectors.popin),this.popinId=this._element.dataset.popin,this.contentPopin=this._element.querySelector(`${this.options.selectors.popinContent}`),this.openBtns=document.querySelectorAll(`${this.options.selectors.btnOpen}[${r.PopinBtnOpen}="${this.popinId}"]`),this.closeBtns=document.querySelectorAll(`${this.options.selectors.btnClose}[${r.PopinBtnClose}="${this.popinId}"]`),void 0!==this._element.dataset.popinLoad&&(this.options.load=this._element.dataset.popinLoad),document.addEventListener(`open-${this.popinId}`,e=>{e.detail&&e.detail.thenOpen&&(this.options.thenOpen=e.detail.thenOpen),e.detail&&e.detail.callback&&(this.options.callback=e.detail.callback),this.open()}),document.addEventListener(`close-${this.popinId}`,()=>{this.close()}),this.init()}init(){this._element.addEventListener("keydown",e=>{"Escape"===e.key&&this.close()}),[...this.openBtns].map(e=>e.addEventListener("click",e=>this.handleOpenBtn(e))),[...this.closeBtns].map(e=>e.addEventListener("click",e=>this.handleCloseBtn(e)))}handleOpenBtn(e){e.preventDefault(),this.open(e.target)}handleCloseBtn(e){e.preventDefault(),this.close()}open(e){this._element.classList.add(s.PopinOpen),this._element.setAttribute("aria-hidden",!1),this.options.clickOutside&&this._element.addEventListener("click",t=>{const{target:n}=t;n.closest(this.options.selectors.popinMain)||n.isEqualNode(e)||this.close()},!1),this.options.trapFocus&&(this.trapFocus=i()(this._element),this.trapFocus.activate(),this._element.focus()),void 0!==this.options.load&&""!==this.options.load?this.loadContent(this.options.load):void 0!==this.options.callback&&this.options.callback();const t=CustomEvent("popin-open",{detail:{popinId:this.popinId}});this._element.dispatchEvent(t)}close(){if(this.options.trapFocus&&this.trapFocus.deactivate(),this._element.classList.remove(s.PopinOpen),this._element.setAttribute("aria-hidden",!0),this.options.thenOpen){const e=new CustomEvent(`open-${this.options.thenOpen}`);document.dispatchEvent(e)}const e=CustomEvent("popin-close",{detail:{popinId:this.popinId}});this._element.dispatchEvent(e)}loadContent(e,t="text"){this.contentPopin.innerHTML="",this.contentPopin.classList.add(s.PopinLoading),fetch(e).then(e=>{this.contentPopin.classList.remove(s.PopinLoading),"json"===t?e.json().then(e=>{e=this.options.loadSelector?e[this.options.loadSelector]:e[0],this.contentPopin.insertAdjacentHTML("afterbegin",e),void 0!==this.options.callback&&this.options.callback()}):e.text().then(e=>{if(this.options.loadSelector){const t=document.createElement("div");t.innerHTML=e,e=t.querySelector(this.options.loadSelector).outerHTML}this.contentPopin.insertAdjacentHTML("afterbegin",e),void 0!==this.options.callback&&this.options.callback()})}).catch(()=>{this.contentPopin.innerHTML=this.options.loadError})}}console.log("sqdsds"),document.querySelectorAll(".js-popin").forEach(e=>{e.popin=new c(e,{load:"/login",loadSelector:"#login-form",callback:(void 0).loginCallback})})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,